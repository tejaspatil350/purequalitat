#include <Adafruit_DHT.h>       //library

#include "Adafruit_DHT.h"       //library

#define DHTPIN D2               //pin defined

#define DHTTYPE DHT11           //sensor type

    DHT dht(DHTPIN, DHTTYPE);    // structure containing dht variable (arguments)
    int led = A5;                //set led at analog pin 5

void setup()                     //initalization of variables
{
    
    pinMode(led,OUTPUT);                         //led as output
    Serial.begin(9600);                          //Enables serial channel with specified configuration.
    Serial.println("DHT11 test!");               //serial print "DHT11 test!" 

    dht.begin();                                // Start DHT sensor
    Particle.function("led",ledToggle);         //Particle.function so that we can turn the LED on and off from the cloud.   
                                                // This is saying that when we ask the cloud for the function "led", it will employ the function ledToggle() from this app.
                                                // Particle.functions always take a string as an argument and return an integer.
}

void loop() 
{
    
delay(60000);                                 //wait for 60sec

    
    float h = dht.getHumidity();                     //Humidity measurement
  
    float t = dht.getTempCelcius();                  //temperature measurement
   
    float f = dht.getTempFarenheit();                //temperature in farenheit measurement

    
    if (isnan(h) || isnan(t) || isnan(f))            // function determines whether a value is an illegal number (Not-a-Number). This function returns true if the value equates to NaN. Otherwise it returns false
{
    Serial.println("Failed to read from DHT sensor!");    //print "Failed to read from DHT sensor!" and cursor to new line for serial window
    return;
    }

   
Serial.print("Humid: ");                                 //print "Humid: " on serial window 
    Serial.print(h);                                     //print value of h
    Serial.print("% - ");                                //print "% - " on serial window
    Serial.print("Temp: ");                              //print "Temp: " on serial window
    Serial.print(f);                                     //print value of f
    Serial.print("*F ");                                 //print "*F " on serial window
    Serial.println(Time.timeStr());                      //to display the current time

                                                         // Publish data and Particle.publish pushes the value out of the device at a time controlled by the device firmware.
    Particle.publish("temp", String (t));                              
    Particle.publish("humi", String (h));               
}    

int ledToggle(String command)                            //we write out our ledToggle function, which is referenced by the Particle.function() called "led"
                                                         /* Particle.functions always take a string as an argument and return an integer.
                                                            Since we can pass a string, it means that we can give the program commands on how the function should be used.
                                                            In this case, telling the function "on" will turn the LED on and telling it "off" will turn the LED off.
                                                            Then, the function returns a value to us to let us know what happened.
                                                            In this case, it will return 1 for the LEDs turning on, 0 for the LEDs turning off,
                                                            and -1 if we received a totally bogus command that didn't do anything to the LEDs.*/




{
if (command=="on")
    {
digitalWrite(led,HIGH);

  return 1;
     }
    else if (command=="off") 
     {
digitalWrite(led,LOW);

return 0;
    }
    else 
    {
return -1;
    }
}

